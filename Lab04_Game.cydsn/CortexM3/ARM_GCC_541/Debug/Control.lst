ARM GAS  C:\Users\danza\AppData\Local\Temp\ccXLpeKQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Control.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Control_Write,"ax",%progbits
  20              		.align	2
  21              		.global	Control_Write
  22              		.thumb
  23              		.thumb_func
  24              		.type	Control_Write, %function
  25              	Control_Write:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\Control.c"
   1:Generated_Source\PSoC5/Control.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Control.c **** * File Name: Control.c  
   3:Generated_Source\PSoC5/Control.c **** * Version 2.20
   4:Generated_Source\PSoC5/Control.c **** *
   5:Generated_Source\PSoC5/Control.c **** * Description:
   6:Generated_Source\PSoC5/Control.c **** *  This file contains API to enable firmware control of a Pins component.
   7:Generated_Source\PSoC5/Control.c **** *
   8:Generated_Source\PSoC5/Control.c **** * Note:
   9:Generated_Source\PSoC5/Control.c **** *
  10:Generated_Source\PSoC5/Control.c **** ********************************************************************************
  11:Generated_Source\PSoC5/Control.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/Control.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:Generated_Source\PSoC5/Control.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:Generated_Source\PSoC5/Control.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/Control.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/Control.c **** 
  17:Generated_Source\PSoC5/Control.c **** #include "cytypes.h"
  18:Generated_Source\PSoC5/Control.c **** #include "Control.h"
  19:Generated_Source\PSoC5/Control.c **** 
  20:Generated_Source\PSoC5/Control.c **** /* APIs are not generated for P15[7:6] on PSoC 5 */
  21:Generated_Source\PSoC5/Control.c **** #if !(CY_PSOC5A &&\
  22:Generated_Source\PSoC5/Control.c **** 	 Control__PORT == 15 && ((Control__MASK & 0xC0) != 0))
  23:Generated_Source\PSoC5/Control.c **** 
  24:Generated_Source\PSoC5/Control.c **** 
  25:Generated_Source\PSoC5/Control.c **** /*******************************************************************************
  26:Generated_Source\PSoC5/Control.c **** * Function Name: Control_Write
  27:Generated_Source\PSoC5/Control.c **** ****************************************************************************//**
  28:Generated_Source\PSoC5/Control.c **** *
  29:Generated_Source\PSoC5/Control.c **** * \brief Writes the value to the physical port (data output register), masking
  30:Generated_Source\PSoC5/Control.c **** *  and shifting the bits appropriately. 
ARM GAS  C:\Users\danza\AppData\Local\Temp\ccXLpeKQ.s 			page 2


  31:Generated_Source\PSoC5/Control.c **** *
  32:Generated_Source\PSoC5/Control.c **** * The data output register controls the signal applied to the physical pin in 
  33:Generated_Source\PSoC5/Control.c **** * conjunction with the drive mode parameter. This function avoids changing 
  34:Generated_Source\PSoC5/Control.c **** * other bits in the port by using the appropriate method (read-modify-write or
  35:Generated_Source\PSoC5/Control.c **** * bit banding).
  36:Generated_Source\PSoC5/Control.c **** *
  37:Generated_Source\PSoC5/Control.c **** * <b>Note</b> This function should not be used on a hardware digital output pin 
  38:Generated_Source\PSoC5/Control.c **** * as it is driven by the hardware signal attached to it.
  39:Generated_Source\PSoC5/Control.c **** *
  40:Generated_Source\PSoC5/Control.c **** * \param value
  41:Generated_Source\PSoC5/Control.c **** *  Value to write to the component instance.
  42:Generated_Source\PSoC5/Control.c **** *
  43:Generated_Source\PSoC5/Control.c **** * \return 
  44:Generated_Source\PSoC5/Control.c **** *  None 
  45:Generated_Source\PSoC5/Control.c **** *
  46:Generated_Source\PSoC5/Control.c **** * \sideeffect
  47:Generated_Source\PSoC5/Control.c **** *  If you use read-modify-write operations that are not atomic; the Interrupt 
  48:Generated_Source\PSoC5/Control.c **** *  Service Routines (ISR) can cause corruption of this function. An ISR that 
  49:Generated_Source\PSoC5/Control.c **** *  interrupts this function and performs writes to the Pins component data 
  50:Generated_Source\PSoC5/Control.c **** *  register can cause corrupted port data. To avoid this issue, you should 
  51:Generated_Source\PSoC5/Control.c **** *  either use the Per-Pin APIs (primary method) or disable interrupts around 
  52:Generated_Source\PSoC5/Control.c **** *  this function.
  53:Generated_Source\PSoC5/Control.c **** *
  54:Generated_Source\PSoC5/Control.c **** * \funcusage
  55:Generated_Source\PSoC5/Control.c **** *  \snippet Control_SUT.c usage_Control_Write
  56:Generated_Source\PSoC5/Control.c **** *******************************************************************************/
  57:Generated_Source\PSoC5/Control.c **** void Control_Write(uint8 value)
  58:Generated_Source\PSoC5/Control.c **** {
  28              		.loc 1 58 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  59:Generated_Source\PSoC5/Control.c ****     uint8 staticBits = (Control_DR & (uint8)(~Control_MASK));
  34              		.loc 1 59 0
  35 0000 044A     		ldr	r2, .L2
  36 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  37 0004 03F0CF03 		and	r3, r3, #207
  38              	.LVL1:
  60:Generated_Source\PSoC5/Control.c ****     Control_DR = staticBits | ((uint8)(value << Control_SHIFT) & Control_MASK);
  39              		.loc 1 60 0
  40 0008 0001     		lsls	r0, r0, #4
  41              	.LVL2:
  42 000a 00F03000 		and	r0, r0, #48
  43 000e 1843     		orrs	r0, r0, r3
  44 0010 1070     		strb	r0, [r2]
  45 0012 7047     		bx	lr
  46              	.L3:
  47              		.align	2
  48              	.L2:
  49 0014 30510040 		.word	1073762608
  50              		.cfi_endproc
  51              	.LFE0:
  52              		.size	Control_Write, .-Control_Write
  53              		.section	.text.Control_SetDriveMode,"ax",%progbits
  54              		.align	2
ARM GAS  C:\Users\danza\AppData\Local\Temp\ccXLpeKQ.s 			page 3


  55              		.global	Control_SetDriveMode
  56              		.thumb
  57              		.thumb_func
  58              		.type	Control_SetDriveMode, %function
  59              	Control_SetDriveMode:
  60              	.LFB1:
  61:Generated_Source\PSoC5/Control.c **** }
  62:Generated_Source\PSoC5/Control.c **** 
  63:Generated_Source\PSoC5/Control.c **** 
  64:Generated_Source\PSoC5/Control.c **** /*******************************************************************************
  65:Generated_Source\PSoC5/Control.c **** * Function Name: Control_SetDriveMode
  66:Generated_Source\PSoC5/Control.c **** ****************************************************************************//**
  67:Generated_Source\PSoC5/Control.c **** *
  68:Generated_Source\PSoC5/Control.c **** * \brief Sets the drive mode for each of the Pins component's pins.
  69:Generated_Source\PSoC5/Control.c **** * 
  70:Generated_Source\PSoC5/Control.c **** * <b>Note</b> This affects all pins in the Pins component instance. Use the
  71:Generated_Source\PSoC5/Control.c **** * Per-Pin APIs if you wish to control individual pin's drive modes.
  72:Generated_Source\PSoC5/Control.c **** *
  73:Generated_Source\PSoC5/Control.c **** * \param mode
  74:Generated_Source\PSoC5/Control.c **** *  Mode for the selected signals. Valid options are documented in 
  75:Generated_Source\PSoC5/Control.c **** *  \ref driveMode.
  76:Generated_Source\PSoC5/Control.c **** *
  77:Generated_Source\PSoC5/Control.c **** * \return
  78:Generated_Source\PSoC5/Control.c **** *  None
  79:Generated_Source\PSoC5/Control.c **** *
  80:Generated_Source\PSoC5/Control.c **** * \sideeffect
  81:Generated_Source\PSoC5/Control.c **** *  If you use read-modify-write operations that are not atomic, the ISR can
  82:Generated_Source\PSoC5/Control.c **** *  cause corruption of this function. An ISR that interrupts this function 
  83:Generated_Source\PSoC5/Control.c **** *  and performs writes to the Pins component Drive Mode registers can cause 
  84:Generated_Source\PSoC5/Control.c **** *  corrupted port data. To avoid this issue, you should either use the Per-Pin
  85:Generated_Source\PSoC5/Control.c **** *  APIs (primary method) or disable interrupts around this function.
  86:Generated_Source\PSoC5/Control.c **** *
  87:Generated_Source\PSoC5/Control.c **** * \funcusage
  88:Generated_Source\PSoC5/Control.c **** *  \snippet Control_SUT.c usage_Control_SetDriveMode
  89:Generated_Source\PSoC5/Control.c **** *******************************************************************************/
  90:Generated_Source\PSoC5/Control.c **** void Control_SetDriveMode(uint8 mode)
  91:Generated_Source\PSoC5/Control.c **** {
  61              		.loc 1 91 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LVL3:
  92:Generated_Source\PSoC5/Control.c **** 	CyPins_SetPinDriveMode(Control_0, mode);
  67              		.loc 1 92 0
  68 0000 074A     		ldr	r2, .L5
  69 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  70 0004 00F00E00 		and	r0, r0, #14
  71              	.LVL4:
  72 0008 03F0F103 		and	r3, r3, #241
  73 000c 0343     		orrs	r3, r3, r0
  74 000e 1370     		strb	r3, [r2]
  93:Generated_Source\PSoC5/Control.c **** 	CyPins_SetPinDriveMode(Control_1, mode);
  75              		.loc 1 93 0
  76 0010 0132     		adds	r2, r2, #1
  77 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  78 0014 03F0F103 		and	r3, r3, #241
ARM GAS  C:\Users\danza\AppData\Local\Temp\ccXLpeKQ.s 			page 4


  79 0018 1843     		orrs	r0, r0, r3
  80 001a 1070     		strb	r0, [r2]
  81 001c 7047     		bx	lr
  82              	.L6:
  83 001e 00BF     		.align	2
  84              	.L5:
  85 0020 1C500040 		.word	1073762332
  86              		.cfi_endproc
  87              	.LFE1:
  88              		.size	Control_SetDriveMode, .-Control_SetDriveMode
  89              		.section	.text.Control_Read,"ax",%progbits
  90              		.align	2
  91              		.global	Control_Read
  92              		.thumb
  93              		.thumb_func
  94              		.type	Control_Read, %function
  95              	Control_Read:
  96              	.LFB2:
  94:Generated_Source\PSoC5/Control.c **** }
  95:Generated_Source\PSoC5/Control.c **** 
  96:Generated_Source\PSoC5/Control.c **** 
  97:Generated_Source\PSoC5/Control.c **** /*******************************************************************************
  98:Generated_Source\PSoC5/Control.c **** * Function Name: Control_Read
  99:Generated_Source\PSoC5/Control.c **** ****************************************************************************//**
 100:Generated_Source\PSoC5/Control.c **** *
 101:Generated_Source\PSoC5/Control.c **** * \brief Reads the associated physical port (pin status register) and masks 
 102:Generated_Source\PSoC5/Control.c **** *  the required bits according to the width and bit position of the component
 103:Generated_Source\PSoC5/Control.c **** *  instance. 
 104:Generated_Source\PSoC5/Control.c **** *
 105:Generated_Source\PSoC5/Control.c **** * The pin's status register returns the current logic level present on the 
 106:Generated_Source\PSoC5/Control.c **** * physical pin.
 107:Generated_Source\PSoC5/Control.c **** *
 108:Generated_Source\PSoC5/Control.c **** * \return 
 109:Generated_Source\PSoC5/Control.c **** *  The current value for the pins in the component as a right justified number.
 110:Generated_Source\PSoC5/Control.c **** *
 111:Generated_Source\PSoC5/Control.c **** * \funcusage
 112:Generated_Source\PSoC5/Control.c **** *  \snippet Control_SUT.c usage_Control_Read  
 113:Generated_Source\PSoC5/Control.c **** *******************************************************************************/
 114:Generated_Source\PSoC5/Control.c **** uint8 Control_Read(void)
 115:Generated_Source\PSoC5/Control.c **** {
  97              		.loc 1 115 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 116:Generated_Source\PSoC5/Control.c ****     return (Control_PS & Control_MASK) >> Control_SHIFT;
 102              		.loc 1 116 0
 103 0000 024B     		ldr	r3, .L8
 104 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 117:Generated_Source\PSoC5/Control.c **** }
 105              		.loc 1 117 0
 106 0004 C0F30110 		ubfx	r0, r0, #4, #2
 107 0008 7047     		bx	lr
 108              	.L9:
 109 000a 00BF     		.align	2
 110              	.L8:
 111 000c 31510040 		.word	1073762609
ARM GAS  C:\Users\danza\AppData\Local\Temp\ccXLpeKQ.s 			page 5


 112              		.cfi_endproc
 113              	.LFE2:
 114              		.size	Control_Read, .-Control_Read
 115              		.section	.text.Control_ReadDataReg,"ax",%progbits
 116              		.align	2
 117              		.global	Control_ReadDataReg
 118              		.thumb
 119              		.thumb_func
 120              		.type	Control_ReadDataReg, %function
 121              	Control_ReadDataReg:
 122              	.LFB3:
 118:Generated_Source\PSoC5/Control.c **** 
 119:Generated_Source\PSoC5/Control.c **** 
 120:Generated_Source\PSoC5/Control.c **** /*******************************************************************************
 121:Generated_Source\PSoC5/Control.c **** * Function Name: Control_ReadDataReg
 122:Generated_Source\PSoC5/Control.c **** ****************************************************************************//**
 123:Generated_Source\PSoC5/Control.c **** *
 124:Generated_Source\PSoC5/Control.c **** * \brief Reads the associated physical port's data output register and masks 
 125:Generated_Source\PSoC5/Control.c **** *  the correct bits according to the width and bit position of the component 
 126:Generated_Source\PSoC5/Control.c **** *  instance. 
 127:Generated_Source\PSoC5/Control.c **** *
 128:Generated_Source\PSoC5/Control.c **** * The data output register controls the signal applied to the physical pin in 
 129:Generated_Source\PSoC5/Control.c **** * conjunction with the drive mode parameter. This is not the same as the 
 130:Generated_Source\PSoC5/Control.c **** * preferred Control_Read() API because the 
 131:Generated_Source\PSoC5/Control.c **** * Control_ReadDataReg() reads the data register instead of the status 
 132:Generated_Source\PSoC5/Control.c **** * register. For output pins this is a useful function to determine the value 
 133:Generated_Source\PSoC5/Control.c **** * just written to the pin.
 134:Generated_Source\PSoC5/Control.c **** *
 135:Generated_Source\PSoC5/Control.c **** * \return 
 136:Generated_Source\PSoC5/Control.c **** *  The current value of the data register masked and shifted into a right 
 137:Generated_Source\PSoC5/Control.c **** *  justified number for the component instance.
 138:Generated_Source\PSoC5/Control.c **** *
 139:Generated_Source\PSoC5/Control.c **** * \funcusage
 140:Generated_Source\PSoC5/Control.c **** *  \snippet Control_SUT.c usage_Control_ReadDataReg 
 141:Generated_Source\PSoC5/Control.c **** *******************************************************************************/
 142:Generated_Source\PSoC5/Control.c **** uint8 Control_ReadDataReg(void)
 143:Generated_Source\PSoC5/Control.c **** {
 123              		.loc 1 143 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 144:Generated_Source\PSoC5/Control.c ****     return (Control_DR & Control_MASK) >> Control_SHIFT;
 128              		.loc 1 144 0
 129 0000 024B     		ldr	r3, .L11
 130 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 145:Generated_Source\PSoC5/Control.c **** }
 131              		.loc 1 145 0
 132 0004 C0F30110 		ubfx	r0, r0, #4, #2
 133 0008 7047     		bx	lr
 134              	.L12:
 135 000a 00BF     		.align	2
 136              	.L11:
 137 000c 30510040 		.word	1073762608
 138              		.cfi_endproc
 139              	.LFE3:
 140              		.size	Control_ReadDataReg, .-Control_ReadDataReg
ARM GAS  C:\Users\danza\AppData\Local\Temp\ccXLpeKQ.s 			page 6


 141              		.section	.text.Control_SetInterruptMode,"ax",%progbits
 142              		.align	2
 143              		.global	Control_SetInterruptMode
 144              		.thumb
 145              		.thumb_func
 146              		.type	Control_SetInterruptMode, %function
 147              	Control_SetInterruptMode:
 148              	.LFB4:
 146:Generated_Source\PSoC5/Control.c **** 
 147:Generated_Source\PSoC5/Control.c **** 
 148:Generated_Source\PSoC5/Control.c **** /* If interrupt is connected for this Pins component */ 
 149:Generated_Source\PSoC5/Control.c **** #if defined(Control_INTSTAT) 
 150:Generated_Source\PSoC5/Control.c **** 
 151:Generated_Source\PSoC5/Control.c ****     /*******************************************************************************
 152:Generated_Source\PSoC5/Control.c ****     * Function Name: Control_SetInterruptMode
 153:Generated_Source\PSoC5/Control.c ****     ****************************************************************************//**
 154:Generated_Source\PSoC5/Control.c ****     *
 155:Generated_Source\PSoC5/Control.c ****     * \brief Configures the interrupt mode for each of the Pins component's
 156:Generated_Source\PSoC5/Control.c ****     *  pins. Alternatively you may set the interrupt mode for all the pins
 157:Generated_Source\PSoC5/Control.c ****     *  specified in the Pins component.
 158:Generated_Source\PSoC5/Control.c ****     *
 159:Generated_Source\PSoC5/Control.c ****     *  <b>Note</b> The interrupt is port-wide and therefore any enabled pin
 160:Generated_Source\PSoC5/Control.c ****     *  interrupt may trigger it.
 161:Generated_Source\PSoC5/Control.c ****     *
 162:Generated_Source\PSoC5/Control.c ****     * \param position
 163:Generated_Source\PSoC5/Control.c ****     *  The pin position as listed in the Pins component. You may OR these to be 
 164:Generated_Source\PSoC5/Control.c ****     *  able to configure the interrupt mode of multiple pins within a Pins 
 165:Generated_Source\PSoC5/Control.c ****     *  component. Or you may use Control_INTR_ALL to configure the
 166:Generated_Source\PSoC5/Control.c ****     *  interrupt mode of all the pins in the Pins component.       
 167:Generated_Source\PSoC5/Control.c ****     *  - Control_0_INTR       (First pin in the list)
 168:Generated_Source\PSoC5/Control.c ****     *  - Control_1_INTR       (Second pin in the list)
 169:Generated_Source\PSoC5/Control.c ****     *  - ...
 170:Generated_Source\PSoC5/Control.c ****     *  - Control_INTR_ALL     (All pins in Pins component)
 171:Generated_Source\PSoC5/Control.c ****     *
 172:Generated_Source\PSoC5/Control.c ****     * \param mode
 173:Generated_Source\PSoC5/Control.c ****     *  Interrupt mode for the selected pins. Valid options are documented in
 174:Generated_Source\PSoC5/Control.c ****     *  \ref intrMode.
 175:Generated_Source\PSoC5/Control.c ****     *
 176:Generated_Source\PSoC5/Control.c ****     * \return 
 177:Generated_Source\PSoC5/Control.c ****     *  None
 178:Generated_Source\PSoC5/Control.c ****     *  
 179:Generated_Source\PSoC5/Control.c ****     * \sideeffect
 180:Generated_Source\PSoC5/Control.c ****     *  It is recommended that the interrupt be disabled before calling this 
 181:Generated_Source\PSoC5/Control.c ****     *  function to avoid unintended interrupt requests. Note that the interrupt
 182:Generated_Source\PSoC5/Control.c ****     *  type is port wide, and therefore will trigger for any enabled pin on the 
 183:Generated_Source\PSoC5/Control.c ****     *  port.
 184:Generated_Source\PSoC5/Control.c ****     *
 185:Generated_Source\PSoC5/Control.c ****     * \funcusage
 186:Generated_Source\PSoC5/Control.c ****     *  \snippet Control_SUT.c usage_Control_SetInterruptMode
 187:Generated_Source\PSoC5/Control.c ****     *******************************************************************************/
 188:Generated_Source\PSoC5/Control.c ****     void Control_SetInterruptMode(uint16 position, uint16 mode)
 189:Generated_Source\PSoC5/Control.c ****     {
 149              		.loc 1 189 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
ARM GAS  C:\Users\danza\AppData\Local\Temp\ccXLpeKQ.s 			page 7


 154              	.LVL5:
 190:Generated_Source\PSoC5/Control.c **** 		if((position & Control_0_INTR) != 0u) 
 155              		.loc 1 190 0
 156 0000 00F01003 		and	r3, r0, #16
 157 0004 9BB2     		uxth	r3, r3
 158 0006 13B1     		cbz	r3, .L14
 191:Generated_Source\PSoC5/Control.c **** 		{ 
 192:Generated_Source\PSoC5/Control.c **** 			 Control_0_INTTYPE_REG = (uint8)mode; 
 159              		.loc 1 192 0
 160 0008 CBB2     		uxtb	r3, r1
 161 000a 054A     		ldr	r2, .L16
 162 000c 1370     		strb	r3, [r2]
 163              	.L14:
 193:Generated_Source\PSoC5/Control.c **** 		} 
 194:Generated_Source\PSoC5/Control.c **** 		if((position & Control_1_INTR) != 0u) 
 164              		.loc 1 194 0
 165 000e 00F02000 		and	r0, r0, #32
 166              	.LVL6:
 167 0012 80B2     		uxth	r0, r0
 168 0014 10B1     		cbz	r0, .L13
 195:Generated_Source\PSoC5/Control.c **** 		{ 
 196:Generated_Source\PSoC5/Control.c **** 			 Control_1_INTTYPE_REG = (uint8)mode; 
 169              		.loc 1 196 0
 170 0016 C9B2     		uxtb	r1, r1
 171              	.LVL7:
 172 0018 024B     		ldr	r3, .L16+4
 173 001a 1970     		strb	r1, [r3]
 174              	.L13:
 175 001c 7047     		bx	lr
 176              	.L17:
 177 001e 00BF     		.align	2
 178              	.L16:
 179 0020 1C450040 		.word	1073759516
 180 0024 1D450040 		.word	1073759517
 181              		.cfi_endproc
 182              	.LFE4:
 183              		.size	Control_SetInterruptMode, .-Control_SetInterruptMode
 184              		.section	.text.Control_ClearInterrupt,"ax",%progbits
 185              		.align	2
 186              		.global	Control_ClearInterrupt
 187              		.thumb
 188              		.thumb_func
 189              		.type	Control_ClearInterrupt, %function
 190              	Control_ClearInterrupt:
 191              	.LFB5:
 197:Generated_Source\PSoC5/Control.c **** 		}
 198:Generated_Source\PSoC5/Control.c ****     }
 199:Generated_Source\PSoC5/Control.c ****     
 200:Generated_Source\PSoC5/Control.c ****     
 201:Generated_Source\PSoC5/Control.c ****     /*******************************************************************************
 202:Generated_Source\PSoC5/Control.c ****     * Function Name: Control_ClearInterrupt
 203:Generated_Source\PSoC5/Control.c ****     ****************************************************************************//**
 204:Generated_Source\PSoC5/Control.c ****     *
 205:Generated_Source\PSoC5/Control.c ****     * \brief Clears any active interrupts attached with the component and returns 
 206:Generated_Source\PSoC5/Control.c ****     *  the value of the interrupt status register allowing determination of which
 207:Generated_Source\PSoC5/Control.c ****     *  pins generated an interrupt event.
 208:Generated_Source\PSoC5/Control.c ****     *
ARM GAS  C:\Users\danza\AppData\Local\Temp\ccXLpeKQ.s 			page 8


 209:Generated_Source\PSoC5/Control.c ****     * \return 
 210:Generated_Source\PSoC5/Control.c ****     *  The right-shifted current value of the interrupt status register. Each pin 
 211:Generated_Source\PSoC5/Control.c ****     *  has one bit set if it generated an interrupt event. For example, bit 0 is 
 212:Generated_Source\PSoC5/Control.c ****     *  for pin 0 and bit 1 is for pin 1 of the Pins component.
 213:Generated_Source\PSoC5/Control.c ****     *  
 214:Generated_Source\PSoC5/Control.c ****     * \sideeffect
 215:Generated_Source\PSoC5/Control.c ****     *  Clears all bits of the physical port's interrupt status register, not just
 216:Generated_Source\PSoC5/Control.c ****     *  those associated with the Pins component.
 217:Generated_Source\PSoC5/Control.c ****     *
 218:Generated_Source\PSoC5/Control.c ****     * \funcusage
 219:Generated_Source\PSoC5/Control.c ****     *  \snippet Control_SUT.c usage_Control_ClearInterrupt
 220:Generated_Source\PSoC5/Control.c ****     *******************************************************************************/
 221:Generated_Source\PSoC5/Control.c ****     uint8 Control_ClearInterrupt(void)
 222:Generated_Source\PSoC5/Control.c ****     {
 192              		.loc 1 222 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 223:Generated_Source\PSoC5/Control.c ****         return (Control_INTSTAT & Control_MASK) >> Control_SHIFT;
 197              		.loc 1 223 0
 198 0000 024B     		ldr	r3, .L19
 199 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 224:Generated_Source\PSoC5/Control.c ****     }
 200              		.loc 1 224 0
 201 0004 C0F30110 		ubfx	r0, r0, #4, #2
 202 0008 7047     		bx	lr
 203              	.L20:
 204 000a 00BF     		.align	2
 205              	.L19:
 206 000c 83450040 		.word	1073759619
 207              		.cfi_endproc
 208              	.LFE5:
 209              		.size	Control_ClearInterrupt, .-Control_ClearInterrupt
 210              		.text
 211              	.Letext0:
 212              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 213              		.section	.debug_info,"",%progbits
 214              	.Ldebug_info0:
 215 0000 70010000 		.4byte	0x170
 216 0004 0400     		.2byte	0x4
 217 0006 00000000 		.4byte	.Ldebug_abbrev0
 218 000a 04       		.byte	0x4
 219 000b 01       		.uleb128 0x1
 220 000c BC000000 		.4byte	.LASF24
 221 0010 0C       		.byte	0xc
 222 0011 DF010000 		.4byte	.LASF25
 223 0015 7D000000 		.4byte	.LASF26
 224 0019 00000000 		.4byte	.Ldebug_ranges0+0
 225 001d 00000000 		.4byte	0
 226 0021 00000000 		.4byte	.Ldebug_line0
 227 0025 02       		.uleb128 0x2
 228 0026 01       		.byte	0x1
 229 0027 06       		.byte	0x6
 230 0028 09020000 		.4byte	.LASF0
 231 002c 02       		.uleb128 0x2
 232 002d 01       		.byte	0x1
ARM GAS  C:\Users\danza\AppData\Local\Temp\ccXLpeKQ.s 			page 9


 233 002e 08       		.byte	0x8
 234 002f AE000000 		.4byte	.LASF1
 235 0033 02       		.uleb128 0x2
 236 0034 02       		.byte	0x2
 237 0035 05       		.byte	0x5
 238 0036 D5010000 		.4byte	.LASF2
 239 003a 02       		.uleb128 0x2
 240 003b 02       		.byte	0x2
 241 003c 07       		.byte	0x7
 242 003d 61010000 		.4byte	.LASF3
 243 0041 02       		.uleb128 0x2
 244 0042 04       		.byte	0x4
 245 0043 05       		.byte	0x5
 246 0044 00020000 		.4byte	.LASF4
 247 0048 02       		.uleb128 0x2
 248 0049 04       		.byte	0x4
 249 004a 07       		.byte	0x7
 250 004b 4F010000 		.4byte	.LASF5
 251 004f 02       		.uleb128 0x2
 252 0050 08       		.byte	0x8
 253 0051 05       		.byte	0x5
 254 0052 C2010000 		.4byte	.LASF6
 255 0056 02       		.uleb128 0x2
 256 0057 08       		.byte	0x8
 257 0058 07       		.byte	0x7
 258 0059 98010000 		.4byte	.LASF7
 259 005d 03       		.uleb128 0x3
 260 005e 04       		.byte	0x4
 261 005f 05       		.byte	0x5
 262 0060 696E7400 		.ascii	"int\000"
 263 0064 02       		.uleb128 0x2
 264 0065 04       		.byte	0x4
 265 0066 07       		.byte	0x7
 266 0067 8B010000 		.4byte	.LASF8
 267 006b 04       		.uleb128 0x4
 268 006c A8000000 		.4byte	.LASF9
 269 0070 02       		.byte	0x2
 270 0071 E401     		.2byte	0x1e4
 271 0073 2C000000 		.4byte	0x2c
 272 0077 04       		.uleb128 0x4
 273 0078 7B010000 		.4byte	.LASF10
 274 007c 02       		.byte	0x2
 275 007d E501     		.2byte	0x1e5
 276 007f 3A000000 		.4byte	0x3a
 277 0083 02       		.uleb128 0x2
 278 0084 04       		.byte	0x4
 279 0085 04       		.byte	0x4
 280 0086 77000000 		.4byte	.LASF11
 281 008a 02       		.uleb128 0x2
 282 008b 08       		.byte	0x8
 283 008c 04       		.byte	0x4
 284 008d 74010000 		.4byte	.LASF12
 285 0091 02       		.uleb128 0x2
 286 0092 01       		.byte	0x1
 287 0093 08       		.byte	0x8
 288 0094 D0010000 		.4byte	.LASF13
 289 0098 04       		.uleb128 0x4
ARM GAS  C:\Users\danza\AppData\Local\Temp\ccXLpeKQ.s 			page 10


 290 0099 4A010000 		.4byte	.LASF14
 291 009d 02       		.byte	0x2
 292 009e 8E02     		.2byte	0x28e
 293 00a0 A4000000 		.4byte	0xa4
 294 00a4 05       		.uleb128 0x5
 295 00a5 6B000000 		.4byte	0x6b
 296 00a9 06       		.uleb128 0x6
 297 00aa B4010000 		.4byte	.LASF15
 298 00ae 01       		.byte	0x1
 299 00af 39       		.byte	0x39
 300 00b0 00000000 		.4byte	.LFB0
 301 00b4 18000000 		.4byte	.LFE0-.LFB0
 302 00b8 01       		.uleb128 0x1
 303 00b9 9C       		.byte	0x9c
 304 00ba DB000000 		.4byte	0xdb
 305 00be 07       		.uleb128 0x7
 306 00bf 15000000 		.4byte	.LASF17
 307 00c3 01       		.byte	0x1
 308 00c4 39       		.byte	0x39
 309 00c5 6B000000 		.4byte	0x6b
 310 00c9 00000000 		.4byte	.LLST0
 311 00cd 08       		.uleb128 0x8
 312 00ce 1B000000 		.4byte	.LASF27
 313 00d2 01       		.byte	0x1
 314 00d3 3B       		.byte	0x3b
 315 00d4 6B000000 		.4byte	0x6b
 316 00d8 01       		.uleb128 0x1
 317 00d9 53       		.byte	0x53
 318 00da 00       		.byte	0
 319 00db 06       		.uleb128 0x6
 320 00dc 00000000 		.4byte	.LASF16
 321 00e0 01       		.byte	0x1
 322 00e1 5A       		.byte	0x5a
 323 00e2 00000000 		.4byte	.LFB1
 324 00e6 24000000 		.4byte	.LFE1-.LFB1
 325 00ea 01       		.uleb128 0x1
 326 00eb 9C       		.byte	0x9c
 327 00ec 00010000 		.4byte	0x100
 328 00f0 07       		.uleb128 0x7
 329 00f1 AF010000 		.4byte	.LASF18
 330 00f5 01       		.byte	0x1
 331 00f6 5A       		.byte	0x5a
 332 00f7 6B000000 		.4byte	0x6b
 333 00fb 21000000 		.4byte	.LLST1
 334 00ff 00       		.byte	0
 335 0100 09       		.uleb128 0x9
 336 0101 6A000000 		.4byte	.LASF19
 337 0105 01       		.byte	0x1
 338 0106 72       		.byte	0x72
 339 0107 6B000000 		.4byte	0x6b
 340 010b 00000000 		.4byte	.LFB2
 341 010f 10000000 		.4byte	.LFE2-.LFB2
 342 0113 01       		.uleb128 0x1
 343 0114 9C       		.byte	0x9c
 344 0115 09       		.uleb128 0x9
 345 0116 26000000 		.4byte	.LASF20
 346 011a 01       		.byte	0x1
ARM GAS  C:\Users\danza\AppData\Local\Temp\ccXLpeKQ.s 			page 11


 347 011b 8E       		.byte	0x8e
 348 011c 6B000000 		.4byte	0x6b
 349 0120 00000000 		.4byte	.LFB3
 350 0124 10000000 		.4byte	.LFE3-.LFB3
 351 0128 01       		.uleb128 0x1
 352 0129 9C       		.byte	0x9c
 353 012a 06       		.uleb128 0x6
 354 012b 51000000 		.4byte	.LASF21
 355 012f 01       		.byte	0x1
 356 0130 BC       		.byte	0xbc
 357 0131 00000000 		.4byte	.LFB4
 358 0135 28000000 		.4byte	.LFE4-.LFB4
 359 0139 01       		.uleb128 0x1
 360 013a 9C       		.byte	0x9c
 361 013b 5E010000 		.4byte	0x15e
 362 013f 07       		.uleb128 0x7
 363 0140 82010000 		.4byte	.LASF22
 364 0144 01       		.byte	0x1
 365 0145 BC       		.byte	0xbc
 366 0146 77000000 		.4byte	0x77
 367 014a 42000000 		.4byte	.LLST2
 368 014e 07       		.uleb128 0x7
 369 014f AF010000 		.4byte	.LASF18
 370 0153 01       		.byte	0x1
 371 0154 BC       		.byte	0xbc
 372 0155 77000000 		.4byte	0x77
 373 0159 63000000 		.4byte	.LLST3
 374 015d 00       		.byte	0
 375 015e 09       		.uleb128 0x9
 376 015f 3A000000 		.4byte	.LASF23
 377 0163 01       		.byte	0x1
 378 0164 DD       		.byte	0xdd
 379 0165 6B000000 		.4byte	0x6b
 380 0169 00000000 		.4byte	.LFB5
 381 016d 10000000 		.4byte	.LFE5-.LFB5
 382 0171 01       		.uleb128 0x1
 383 0172 9C       		.byte	0x9c
 384 0173 00       		.byte	0
 385              		.section	.debug_abbrev,"",%progbits
 386              	.Ldebug_abbrev0:
 387 0000 01       		.uleb128 0x1
 388 0001 11       		.uleb128 0x11
 389 0002 01       		.byte	0x1
 390 0003 25       		.uleb128 0x25
 391 0004 0E       		.uleb128 0xe
 392 0005 13       		.uleb128 0x13
 393 0006 0B       		.uleb128 0xb
 394 0007 03       		.uleb128 0x3
 395 0008 0E       		.uleb128 0xe
 396 0009 1B       		.uleb128 0x1b
 397 000a 0E       		.uleb128 0xe
 398 000b 55       		.uleb128 0x55
 399 000c 17       		.uleb128 0x17
 400 000d 11       		.uleb128 0x11
 401 000e 01       		.uleb128 0x1
 402 000f 10       		.uleb128 0x10
 403 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\danza\AppData\Local\Temp\ccXLpeKQ.s 			page 12


 404 0011 00       		.byte	0
 405 0012 00       		.byte	0
 406 0013 02       		.uleb128 0x2
 407 0014 24       		.uleb128 0x24
 408 0015 00       		.byte	0
 409 0016 0B       		.uleb128 0xb
 410 0017 0B       		.uleb128 0xb
 411 0018 3E       		.uleb128 0x3e
 412 0019 0B       		.uleb128 0xb
 413 001a 03       		.uleb128 0x3
 414 001b 0E       		.uleb128 0xe
 415 001c 00       		.byte	0
 416 001d 00       		.byte	0
 417 001e 03       		.uleb128 0x3
 418 001f 24       		.uleb128 0x24
 419 0020 00       		.byte	0
 420 0021 0B       		.uleb128 0xb
 421 0022 0B       		.uleb128 0xb
 422 0023 3E       		.uleb128 0x3e
 423 0024 0B       		.uleb128 0xb
 424 0025 03       		.uleb128 0x3
 425 0026 08       		.uleb128 0x8
 426 0027 00       		.byte	0
 427 0028 00       		.byte	0
 428 0029 04       		.uleb128 0x4
 429 002a 16       		.uleb128 0x16
 430 002b 00       		.byte	0
 431 002c 03       		.uleb128 0x3
 432 002d 0E       		.uleb128 0xe
 433 002e 3A       		.uleb128 0x3a
 434 002f 0B       		.uleb128 0xb
 435 0030 3B       		.uleb128 0x3b
 436 0031 05       		.uleb128 0x5
 437 0032 49       		.uleb128 0x49
 438 0033 13       		.uleb128 0x13
 439 0034 00       		.byte	0
 440 0035 00       		.byte	0
 441 0036 05       		.uleb128 0x5
 442 0037 35       		.uleb128 0x35
 443 0038 00       		.byte	0
 444 0039 49       		.uleb128 0x49
 445 003a 13       		.uleb128 0x13
 446 003b 00       		.byte	0
 447 003c 00       		.byte	0
 448 003d 06       		.uleb128 0x6
 449 003e 2E       		.uleb128 0x2e
 450 003f 01       		.byte	0x1
 451 0040 3F       		.uleb128 0x3f
 452 0041 19       		.uleb128 0x19
 453 0042 03       		.uleb128 0x3
 454 0043 0E       		.uleb128 0xe
 455 0044 3A       		.uleb128 0x3a
 456 0045 0B       		.uleb128 0xb
 457 0046 3B       		.uleb128 0x3b
 458 0047 0B       		.uleb128 0xb
 459 0048 27       		.uleb128 0x27
 460 0049 19       		.uleb128 0x19
ARM GAS  C:\Users\danza\AppData\Local\Temp\ccXLpeKQ.s 			page 13


 461 004a 11       		.uleb128 0x11
 462 004b 01       		.uleb128 0x1
 463 004c 12       		.uleb128 0x12
 464 004d 06       		.uleb128 0x6
 465 004e 40       		.uleb128 0x40
 466 004f 18       		.uleb128 0x18
 467 0050 9742     		.uleb128 0x2117
 468 0052 19       		.uleb128 0x19
 469 0053 01       		.uleb128 0x1
 470 0054 13       		.uleb128 0x13
 471 0055 00       		.byte	0
 472 0056 00       		.byte	0
 473 0057 07       		.uleb128 0x7
 474 0058 05       		.uleb128 0x5
 475 0059 00       		.byte	0
 476 005a 03       		.uleb128 0x3
 477 005b 0E       		.uleb128 0xe
 478 005c 3A       		.uleb128 0x3a
 479 005d 0B       		.uleb128 0xb
 480 005e 3B       		.uleb128 0x3b
 481 005f 0B       		.uleb128 0xb
 482 0060 49       		.uleb128 0x49
 483 0061 13       		.uleb128 0x13
 484 0062 02       		.uleb128 0x2
 485 0063 17       		.uleb128 0x17
 486 0064 00       		.byte	0
 487 0065 00       		.byte	0
 488 0066 08       		.uleb128 0x8
 489 0067 34       		.uleb128 0x34
 490 0068 00       		.byte	0
 491 0069 03       		.uleb128 0x3
 492 006a 0E       		.uleb128 0xe
 493 006b 3A       		.uleb128 0x3a
 494 006c 0B       		.uleb128 0xb
 495 006d 3B       		.uleb128 0x3b
 496 006e 0B       		.uleb128 0xb
 497 006f 49       		.uleb128 0x49
 498 0070 13       		.uleb128 0x13
 499 0071 02       		.uleb128 0x2
 500 0072 18       		.uleb128 0x18
 501 0073 00       		.byte	0
 502 0074 00       		.byte	0
 503 0075 09       		.uleb128 0x9
 504 0076 2E       		.uleb128 0x2e
 505 0077 00       		.byte	0
 506 0078 3F       		.uleb128 0x3f
 507 0079 19       		.uleb128 0x19
 508 007a 03       		.uleb128 0x3
 509 007b 0E       		.uleb128 0xe
 510 007c 3A       		.uleb128 0x3a
 511 007d 0B       		.uleb128 0xb
 512 007e 3B       		.uleb128 0x3b
 513 007f 0B       		.uleb128 0xb
 514 0080 27       		.uleb128 0x27
 515 0081 19       		.uleb128 0x19
 516 0082 49       		.uleb128 0x49
 517 0083 13       		.uleb128 0x13
ARM GAS  C:\Users\danza\AppData\Local\Temp\ccXLpeKQ.s 			page 14


 518 0084 11       		.uleb128 0x11
 519 0085 01       		.uleb128 0x1
 520 0086 12       		.uleb128 0x12
 521 0087 06       		.uleb128 0x6
 522 0088 40       		.uleb128 0x40
 523 0089 18       		.uleb128 0x18
 524 008a 9742     		.uleb128 0x2117
 525 008c 19       		.uleb128 0x19
 526 008d 00       		.byte	0
 527 008e 00       		.byte	0
 528 008f 00       		.byte	0
 529              		.section	.debug_loc,"",%progbits
 530              	.Ldebug_loc0:
 531              	.LLST0:
 532 0000 00000000 		.4byte	.LVL0
 533 0004 0A000000 		.4byte	.LVL2
 534 0008 0100     		.2byte	0x1
 535 000a 50       		.byte	0x50
 536 000b 0A000000 		.4byte	.LVL2
 537 000f 18000000 		.4byte	.LFE0
 538 0013 0400     		.2byte	0x4
 539 0015 F3       		.byte	0xf3
 540 0016 01       		.uleb128 0x1
 541 0017 50       		.byte	0x50
 542 0018 9F       		.byte	0x9f
 543 0019 00000000 		.4byte	0
 544 001d 00000000 		.4byte	0
 545              	.LLST1:
 546 0021 00000000 		.4byte	.LVL3
 547 0025 08000000 		.4byte	.LVL4
 548 0029 0100     		.2byte	0x1
 549 002b 50       		.byte	0x50
 550 002c 08000000 		.4byte	.LVL4
 551 0030 24000000 		.4byte	.LFE1
 552 0034 0400     		.2byte	0x4
 553 0036 F3       		.byte	0xf3
 554 0037 01       		.uleb128 0x1
 555 0038 50       		.byte	0x50
 556 0039 9F       		.byte	0x9f
 557 003a 00000000 		.4byte	0
 558 003e 00000000 		.4byte	0
 559              	.LLST2:
 560 0042 00000000 		.4byte	.LVL5
 561 0046 12000000 		.4byte	.LVL6
 562 004a 0100     		.2byte	0x1
 563 004c 50       		.byte	0x50
 564 004d 12000000 		.4byte	.LVL6
 565 0051 28000000 		.4byte	.LFE4
 566 0055 0400     		.2byte	0x4
 567 0057 F3       		.byte	0xf3
 568 0058 01       		.uleb128 0x1
 569 0059 50       		.byte	0x50
 570 005a 9F       		.byte	0x9f
 571 005b 00000000 		.4byte	0
 572 005f 00000000 		.4byte	0
 573              	.LLST3:
 574 0063 00000000 		.4byte	.LVL5
ARM GAS  C:\Users\danza\AppData\Local\Temp\ccXLpeKQ.s 			page 15


 575 0067 18000000 		.4byte	.LVL7
 576 006b 0100     		.2byte	0x1
 577 006d 51       		.byte	0x51
 578 006e 18000000 		.4byte	.LVL7
 579 0072 28000000 		.4byte	.LFE4
 580 0076 0400     		.2byte	0x4
 581 0078 F3       		.byte	0xf3
 582 0079 01       		.uleb128 0x1
 583 007a 51       		.byte	0x51
 584 007b 9F       		.byte	0x9f
 585 007c 00000000 		.4byte	0
 586 0080 00000000 		.4byte	0
 587              		.section	.debug_aranges,"",%progbits
 588 0000 44000000 		.4byte	0x44
 589 0004 0200     		.2byte	0x2
 590 0006 00000000 		.4byte	.Ldebug_info0
 591 000a 04       		.byte	0x4
 592 000b 00       		.byte	0
 593 000c 0000     		.2byte	0
 594 000e 0000     		.2byte	0
 595 0010 00000000 		.4byte	.LFB0
 596 0014 18000000 		.4byte	.LFE0-.LFB0
 597 0018 00000000 		.4byte	.LFB1
 598 001c 24000000 		.4byte	.LFE1-.LFB1
 599 0020 00000000 		.4byte	.LFB2
 600 0024 10000000 		.4byte	.LFE2-.LFB2
 601 0028 00000000 		.4byte	.LFB3
 602 002c 10000000 		.4byte	.LFE3-.LFB3
 603 0030 00000000 		.4byte	.LFB4
 604 0034 28000000 		.4byte	.LFE4-.LFB4
 605 0038 00000000 		.4byte	.LFB5
 606 003c 10000000 		.4byte	.LFE5-.LFB5
 607 0040 00000000 		.4byte	0
 608 0044 00000000 		.4byte	0
 609              		.section	.debug_ranges,"",%progbits
 610              	.Ldebug_ranges0:
 611 0000 00000000 		.4byte	.LFB0
 612 0004 18000000 		.4byte	.LFE0
 613 0008 00000000 		.4byte	.LFB1
 614 000c 24000000 		.4byte	.LFE1
 615 0010 00000000 		.4byte	.LFB2
 616 0014 10000000 		.4byte	.LFE2
 617 0018 00000000 		.4byte	.LFB3
 618 001c 10000000 		.4byte	.LFE3
 619 0020 00000000 		.4byte	.LFB4
 620 0024 28000000 		.4byte	.LFE4
 621 0028 00000000 		.4byte	.LFB5
 622 002c 10000000 		.4byte	.LFE5
 623 0030 00000000 		.4byte	0
 624 0034 00000000 		.4byte	0
 625              		.section	.debug_line,"",%progbits
 626              	.Ldebug_line0:
 627 0000 B7000000 		.section	.debug_str,"MS",%progbits,1
 627      02004400 
 627      00000201 
 627      FB0E0D00 
 627      01010101 
ARM GAS  C:\Users\danza\AppData\Local\Temp\ccXLpeKQ.s 			page 16


 628              	.LASF16:
 629 0000 436F6E74 		.ascii	"Control_SetDriveMode\000"
 629      726F6C5F 
 629      53657444 
 629      72697665 
 629      4D6F6465 
 630              	.LASF17:
 631 0015 76616C75 		.ascii	"value\000"
 631      6500
 632              	.LASF27:
 633 001b 73746174 		.ascii	"staticBits\000"
 633      69634269 
 633      747300
 634              	.LASF20:
 635 0026 436F6E74 		.ascii	"Control_ReadDataReg\000"
 635      726F6C5F 
 635      52656164 
 635      44617461 
 635      52656700 
 636              	.LASF23:
 637 003a 436F6E74 		.ascii	"Control_ClearInterrupt\000"
 637      726F6C5F 
 637      436C6561 
 637      72496E74 
 637      65727275 
 638              	.LASF21:
 639 0051 436F6E74 		.ascii	"Control_SetInterruptMode\000"
 639      726F6C5F 
 639      53657449 
 639      6E746572 
 639      72757074 
 640              	.LASF19:
 641 006a 436F6E74 		.ascii	"Control_Read\000"
 641      726F6C5F 
 641      52656164 
 641      00
 642              	.LASF11:
 643 0077 666C6F61 		.ascii	"float\000"
 643      7400
 644              	.LASF26:
 645 007d 433A5C45 		.ascii	"C:\\ECE381_Labs\\Lab04_Game\\Lab04_Game.cydsn\000"
 645      43453338 
 645      315F4C61 
 645      62735C4C 
 645      61623034 
 646              	.LASF9:
 647 00a8 75696E74 		.ascii	"uint8\000"
 647      3800
 648              	.LASF1:
 649 00ae 756E7369 		.ascii	"unsigned char\000"
 649      676E6564 
 649      20636861 
 649      7200
 650              	.LASF24:
 651 00bc 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 651      43313120 
 651      352E342E 
ARM GAS  C:\Users\danza\AppData\Local\Temp\ccXLpeKQ.s 			page 17


 651      31203230 
 651      31363036 
 652 00ef 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 652      20726576 
 652      6973696F 
 652      6E203233 
 652      37373135 
 653 0122 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 653      66756E63 
 653      74696F6E 
 653      2D736563 
 653      74696F6E 
 654              	.LASF14:
 655 014a 72656738 		.ascii	"reg8\000"
 655      00
 656              	.LASF5:
 657 014f 6C6F6E67 		.ascii	"long unsigned int\000"
 657      20756E73 
 657      69676E65 
 657      6420696E 
 657      7400
 658              	.LASF3:
 659 0161 73686F72 		.ascii	"short unsigned int\000"
 659      7420756E 
 659      7369676E 
 659      65642069 
 659      6E7400
 660              	.LASF12:
 661 0174 646F7562 		.ascii	"double\000"
 661      6C6500
 662              	.LASF10:
 663 017b 75696E74 		.ascii	"uint16\000"
 663      313600
 664              	.LASF22:
 665 0182 706F7369 		.ascii	"position\000"
 665      74696F6E 
 665      00
 666              	.LASF8:
 667 018b 756E7369 		.ascii	"unsigned int\000"
 667      676E6564 
 667      20696E74 
 667      00
 668              	.LASF7:
 669 0198 6C6F6E67 		.ascii	"long long unsigned int\000"
 669      206C6F6E 
 669      6720756E 
 669      7369676E 
 669      65642069 
 670              	.LASF18:
 671 01af 6D6F6465 		.ascii	"mode\000"
 671      00
 672              	.LASF15:
 673 01b4 436F6E74 		.ascii	"Control_Write\000"
 673      726F6C5F 
 673      57726974 
 673      6500
 674              	.LASF6:
ARM GAS  C:\Users\danza\AppData\Local\Temp\ccXLpeKQ.s 			page 18


 675 01c2 6C6F6E67 		.ascii	"long long int\000"
 675      206C6F6E 
 675      6720696E 
 675      7400
 676              	.LASF13:
 677 01d0 63686172 		.ascii	"char\000"
 677      00
 678              	.LASF2:
 679 01d5 73686F72 		.ascii	"short int\000"
 679      7420696E 
 679      7400
 680              	.LASF25:
 681 01df 47656E65 		.ascii	"Generated_Source\\PSoC5\\Control.c\000"
 681      72617465 
 681      645F536F 
 681      75726365 
 681      5C50536F 
 682              	.LASF4:
 683 0200 6C6F6E67 		.ascii	"long int\000"
 683      20696E74 
 683      00
 684              	.LASF0:
 685 0209 7369676E 		.ascii	"signed char\000"
 685      65642063 
 685      68617200 
 686              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
